#  Пусть Вы работаете на предприятии, на котором постоянно меняются условия
#  оценки качества продукции. В зависимости от того, четный день или нет, работает тот
#  или иной контроллер.
#  Напишите программу, которая на входе получает дату и список выпущенной
#  продукции с характеристиками. Для упрощения, пусть характеристика будет одна
# вес.
# Пусть в четный день работает контроллер 1, он пропускает продукцию, которая весит
#  от 1000 г до 1100 г.
#  Пусть в нечетный день работает контроллер 2, он пропускает продукцию, которая
#  весит от 950 г до 1050 г. Формально, разумеется, оба контроллера работают в одних
#  и тех же допусках и техкартах.
#  Напишите программу, которая определяет, какой сегодня работает контроллер и в
#  зависимости от этого какую следует выбрать функцию проверки продукции, если
#  заранее известно, что кусок кода, который отвечает за сам процесс оценки, в
#  будущем менять нельзя, например потому, что этот код будет упакован в релиз или
#  подлежит обязательной сертификации, а дату оценки нельзя передать в качестве
#  параметра.
#  Например:
#  ...какой-то код…
#  return check_good(good)
#  ...какой-то код…..

import datetime

def check_type_one(weight):
    return 1000 <= weight <= 1100

def check_type_two(weight):
    return 950 <= weight <= 1050

def choose_function():
    day = datetime.date.today().day
    if day % 2 == 0:
        return check_type_one
    else:
        return check_type_two

def validate_item(item):
    check_function = choose_function()
    return check_function(item["mass"])

products = [
    {"name": "Товар1", "mass": 1005},
    {"name": "Товар2", "mass": 960},
    {"name": "Товар3", "mass": 1120},
    {"name": "Товар4", "mass": 1050},
]

for product in products:
    result = validate_item(product)
    status = "Принят" if result else "Отклонён"
    print(f"Товар: {product['name']}, масса: {product['mass']}г — {status}")
